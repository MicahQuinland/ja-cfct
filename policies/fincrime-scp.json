{
    "Version": "2012-10-17",
    "Statement": [{
        "Sid": "PrivateApisOnly",
        "Effect": "Deny",
        "Action": ["apigateway:DELETE", "apigateway:PATCH", "apigateway:POST", "apigateway:PUT"],
        "Resource": ["arn:aws:apigateway:us-east-1::/restapis", "arn:aws:apigateway:us-east-1::/restapis/*"],
        "Condition": {
            "ForAllValues:StringNotEqualsIfExists": {
                "apigateway:Request/EndpointType": "PRIVATE",
                "apigateway:Resource/EndpointType": "PRIVATE"
            }
        }
    }, {
        "Sid": "RequireVPCConfiguration",
        "Effect": "Deny",
        "Action": ["lambda:CreateFunction"],
        "Resource": "arn:aws:lambda:*:*:function:*",
        "Condition": {
            "Null": {
                "lambda:VpcIds": "True"
            },
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution"]
            }
        }
    }, {
        "Sid": "PreventPublicLambda",
        "Effect": "Deny",
        "Action": "lambda:AddPermission",
        "Resource": "*",
        "Condition": {
            "StringEquals": {
                "lambda:Principal": ["*"]
            },
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution"]
            }

        }
    }, {
        "Sid": "ProtectS3AccountPublicAccessBlock",
        "Effect": "Deny",
        "Action": "s3:PutAccountPublicAccessBlock",
        "Resource": "*"
    }, {
        "Sid": "ProtectCreatePublicBucket",
        "Effect": "Deny",
        "Action": ["s3:PutBucketAcl", "s3:CreateBucket"],
        "Resource": "*",
        "Condition": {
            "StringLike": {
                "s3:x-amz-acl": ["public-read", "public-read-write"]
            }
        }
    }, {
        "Sid": "PreventS3PublicObjectAccess",
        "Effect": "Deny",
        "Action": ["s3:PutObjectVersionAcl", "s3:PutObjectAcl"],
        "Resource": ["arn:aws:s3:::*/*"],
        "Condition": {
            "StringNotEquals": {
                "s3:x-amz-acl": "private"
            }
        }
    }, {
        "Sid": "ProtectUpdatePolicyOnObject",
        "Effect": "Deny",
        "Action": "s3:PutObjectAcl",
        "Resource": "*",
        "Condition": {
            "StringNotLike": {
                "s3:x-amz-acl": "bucket-owner-full-control"
            },
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution"]
            }
        }
    }, {
        "Sid": "S3BucketMustRequireHTTPS",
        "Effect": "Deny",
        "Action": "s3:CreateBucket",
        "Resource": "*",
        "Condition": {
            "NumericLessThan": {
                "s3:TlsVersion": 1.2
            }
        }
    }, {
        "Sid": "ProtectS3Buckets",
        "Effect": "Deny",
        "Action": ["s3:DeleteBucketPolicy", "s3:DeleteBucket", "s3:DeleteBucketWebsite", "s3:DeleteObject"],
        "Resource": "*",
        "Condition": {
            "ArnNotLike": {
                "aws:PrincipalARN": ["arn:aws:iam::*:role/ADMIN", "arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/service-role/AWSControlTowerAdmin"]
            }
        }
    }, {
        "Sid": "DenyUnencryptedS3ObjectUpload",
        "Effect": "Deny",
        "Action": ["s3:PutObject"],
        "Resource": ["arn:aws:s3:::*/*"],
        "Condition": {
            "Null": {
                "s3:x-amz-server-side-encryption": "true"
            }
        }
    }, {
        "Sid": "PreventPublicSecrets",
        "Effect": "Deny",
        "Action": "secretsmanager:PutResourcePolicy",
        "Resource": "*",
        "Condition": {
            "Bool": {
                "secretsmanager:BlockPublicPolicy": "false"
            }
        }
    }, {
        "Sid": "ProtectReservedRDS",
        "Effect": "Deny",
        "Action": "rds:PurchaseReserved*",
        "Resource": "*",
        "Condition": {
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            }
        }
    }, {
        "Sid": "ProtectRDSEncryption",
        "Effect": "Deny",
        "Action": "rds:CreateDBInstance",
        "Resource": "*",
        "Condition": {
            "ForAnyValue:StringEquals": {
                "rds:DatabaseEngine": ["mariadb", "mysql", "oracle-ee", "oracle-se2", "oracle-se1", "oracle-se", "postgres", "sqlserver-ee", "sqlserver-se", "sqlserver-ex", "sqlserver-web"]
            },
            "Bool": {
                "rds:StorageEncrypted": "false"
            }
        }
    }, {
        "Sid": "ProtectRDSClusterEncryption",
        "Effect": "Deny",
        "Action": "rds:CreateDBCluster",
        "Resource": "*",
        "Condition": {
            "Bool": {
                "rds:StorageEncrypted": "false"
            }
        }
    }, {
        "Sid": "ProtectSendMessageToExternalEmail",
        "Effect": "Deny",
        "Action": ["sns:Subscribe"],
        "Resource": "*",
        "Condition": {
            "StringNotLike": {
                "sns:Endpoint": ["*@pwc.com", "arn:aws:sqs:*:*:*", "arn:aws:lambda:*:*:*"]
            },
            "StringNotEquals": {
                "sns:Protocol": ["email", "sqs", "lambda"]
            },
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            }
        }
    }, {
        "Sid": "ProtectSecurityHub",
        "Effect": "Deny",
        "Action": ["securityhub:A*", "securityhub:B*", "securityhub:C*", "securityhub:Dec*", "securityhub:Del*", "securityhub:Di*", "securityhub:E*", "securityhub:GetEnabledStandards", "securityhub:I*", "securityhub:ListEnabled*", "securityhub:Tag*", "securityhub:U*"],
        "Resource": "*",
        "Condition": {
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            }
        }
    }, {
        "Sid": "DenyReservedService",
        "Effect": "Deny",
        "Action": ["ec2:AcceptReserved*", "ec2:CancelReserved*", "ec2:CreateReserved*", "ec2:ModifyReserved*", "ec2:PurchaseReserved*"],
        "Resource": "*",
        "Condition": {
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            }
        }
    }, {
        "Sid": "ProtectDefaultEBSEncryption",
        "Effect": "Deny",
        "Action": "ec2:DisableEbsEncryptionByDefault",
        "Resource": "*",
        "Condition": {
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/Admin"]
            }
        }
    }, {
        "Sid": "ProtectNetwork",
        "Effect": "Deny",
        "Action": ["ec2:AcceptT*", "ec2:AcceptVp*", "ec2:AssociateD*", "ec2:AssociateR*", "ec2:AssociateS*", "ec2:AssociateT*", "ec2:AssociateV*", "ec2:AttachC*", "ec2:AttachI*", "ec2:AttachVp*", "ec2:AuthorizeClient*", "ec2:CreateClientVpnRoute", "ec2:CreateCustomerGateway", "ec2:CreateDhcpOptions", "ec2:CreateEgressOnlyInternetGateway", "ec2:CreateInternetGateway", "ec2:CreateLocalGatewayRouteTableVpc*", "ec2:CreateNatGateway", "ec2:CreateNetworkAcl", "ec2:CreateNetworkAclEntry", "ec2:CreateRoute", "ec2:CreateRouteTable", "ec2:CreateSubnet", "ec2:CreateTraffic*", "ec2:CreateTransit*", "ec2:CreateVp*", "ec2:DeleteClientVpnEndpoint", "ec2:DeleteClientVpnRoute", "ec2:DeleteCustomerGateway", "ec2:DeleteDhcpOptions", "ec2:DeleteEgressOnlyInternetGateway", "ec2:DeleteFlowLogs", "ec2:DeleteInternetGateway", "ec2:DeleteLocalGatewayRouteTableVpcAssociation", "ec2:DeleteNatGateway", "ec2:DeleteNetworkAcl", "ec2:DeleteNetworkAclEntry", "ec2:DeleteRoute", "ec2:DeleteRouteTable", "ec2:DeleteSubnet", "ec2:DeleteTraffic*", "ec2:DeleteTransit*", "ec2:DeleteVp*", "ec2:DeregisterTransitGatewayMulticastGroupMembers", "ec2:DetachClassicLinkVpc", "ec2:DetachInternetGateway", "ec2:DetachVpnGateway", "ec2:DisableTransitGateway*", "ec2:DisableVgwRoutePropagation", "ec2:DisableVpcClassicLink", "ec2:DisableVpcClassicLinkDnsSupport", "ec2:DisassociateClientVpnTargetNetwork", "ec2:DisassociateRouteTable", "ec2:DisassociateTransitGateway*", "ec2:DisassociateVpcCidrBlock", "ec2:EnableTransitGateway*", "ec2:EnableVgwRoutePropagation", "ec2:EnableVpcClassicLink", "ec2:EnableVpcClassicLinkDnsSupport", "ec2:ExportTransitGatewayRoutes", "ec2:ModifyClientVpnEndpoint", "ec2:ModifySubnetAttribute", "ec2:ModifyTraffic*", "ec2:ModifyTransitGatewayVpcAttachment", "ec2:ModifyVpcAttribute", "ec2:ModifyVpcEnd*", "ec2:ModifyVpcPeering*", "ec2:ModifyVpcTenancy", "ec2:MoveAddressToVpc", "ec2:RegisterTransitGateway*", "ec2:RejectTransitGateway*", "ec2:RejectVpc*", "ec2:ReplaceNetworkAcl*", "ec2:ReplaceRoute", "ec2:ReplaceRouteTableAssociation", "ec2:ReplaceTransitGatewayRoute", "ec2:RevokeClientVpnIngress", "ec2:SearchTransitGateway*", "ec2:StartVpc*", "ec2:TerminateClientVpn*", "globalaccelerator:Create*", "globalaccelerator:Update*"],
        "Resource": "*",
        "Condition": {
            "ArnNotLike": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            },
            "Null": {
                "aws:PrincipalTag/networking": "True"
            }
        }
    }, {
        "Sid": "ProtectDefaultVPC",
        "Effect": "Deny",
        "Action": "ec2:CreateDefault*",
        "Resource": "*",
        "Condition": {
            "Null": {
                "aws:PrincipalTag/exe-scp-break-glass": "True"
            }
        }
    }, {
        "Sid": "ProtectInfraSGs",
        "Effect": "Deny",
        "Action": ["ec2:AuthorizeS*", "ec2:CreateTags", "ec2:DeleteSe*", "ec2:DeleteTags", "ec2:RevokeS*", "ec2:UpdateS*"],
        "Resource": "*",
        "Condition": {
            "Null": {
                "aws:ResourceTag/FMManaged": "False"
            }
        }
    }, {
        "Sid": "ProtectCreatePublicEC2",
        "Effect": "Deny",
        "Action": ["ec2:RunInstances"],
        "Resource": "*",
        "Condition": {
            "Bool": {
                "ec2:Public": "true"
            },
            "StringNotEquals": {
                "ec2:Owner": "pwc"
            },
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            }
        }
    }, {
        "Sid": "ProtectIMDSRoleDelivery",
        "Effect": "Deny",
        "Action": "*",
        "Resource": "*",
        "Condition": {
            "NumericLessThan": {
                "ec2:RoleDelivery": "2.0"
            }
        }
    }, {
        "Sid": "ProtectIMDSRequire",
        "Effect": "Deny",
        "Action": "ec2:RunInstances",
        "Resource": "arn:aws:ec2:*:*:instance/*",
        "Condition": {
            "StringNotEquals": {
                "ec2:MetadataHttpTokens": "required"
            }
        }
    }, {
        "Sid": "ProtectIMDSModify",
        "Effect": "Deny",
        "Action": "ec2:ModifyInstanceMetadataOptions",
        "Resource": "*",
        "Condition": {
            "StringNotEquals": {
                "ec2:MetadataHttpTokens": "required"
            },
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            }
        }
    }, {
        "Sid": "BlockNonAmazonVPCe",
        "Effect": "Deny",
        "Action": "ec2:CreateVpcEndpoint",
        "Resource": ["arn:aws:ec2:*:*:vpc-endpoint/*", "arn:aws:ec2:*:*:vpc/*"],
        "Condition": {
            "ForAnyValue:StringNotEquals": {
                "ec2:VpceServiceOwner": ["amazon"]
            },
            "StringNotLikeIfExists": {
                "aws:PrincipalARN": "arn:aws:iam::*:role/AWSControlTowerExecution"
            }
        }
    }, {
        "Sid": "PreventPublicEBSSnapshot",
        "Effect": "Deny",
        "Action": "ec2:ModifySnapshotAttribute",
        "Resource": "*",
        "Condition": {
            "StringEquals": {
                "ec2:Add/group": ["all"]
            }
        }
    }, {
        "Sid": "ProtectConfig",
        "Effect": "Deny",
        "Action": ["config:Delete*", "config:Stop*", "config:Start*", "config:Tag*", "config:Untag*"],
        "Resource": "*",
        "Condition": {
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin"]
            },
            "Null": {
                "aws:PrincipalTag/exe-scp-config": "True",
                "aws:PrincipalTag/exe-scp-break-glass": "True"
            }
        }
    }, {
        "Sid": "ProtectPutEvaluations",
        "Effect": "Deny",
        "Action": "config:PutEvaluations",
        "Resource": "*",
        "Condition": {
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin", "arn:aws:iam::*:role/aws-controltower-ConfigRecorderRole"]
            }
        }
    }, {
        "Sid": "RestrictModificationToCloudWatchLogGroups",
        "Effect": "Deny",
        "Action": ["logs:Delete*", "logs:PutRetentionPolicy", "logs:PutSubscriptionFilter"],
        "Resource": ["arn:aws:logs:*:*:log-group:/aws/rds/*/audit:*", "arn:aws:logs:*:*:log-group:/aws/rds/*/general:*", "arn:aws:logs:*:*:log-group:/aws/rds/*/slowquery:*", "arn:aws:logs:*:*:log-group:/aws/rds/*/postgresql:*"],
        "Condition": {
            "StringNotLike": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution"]
            }
        }
    }, {
        "Sid": "ProtectInfraCloudTrail",
        "Effect": "Deny",
        "Action": ["cloudtrail:DeleteTrail", "cloudtrail:StopLogging", "cloudtrail:UpdateTrail", "cloudtrail:PutEventSelectors"],
        "Resource": ["arn:aws:cloudtrail:*:*:trail/aws-controltower*"],
        "Condition": {
            "ArnNotLikeIfExists": {
                "aws:PrincipalArn": ["arn:aws:iam::*:role/AWSControlTowerExecution", "arn:aws:iam::*:role/Admin", "arn:aws:iam::*:role/aws-controltower-ConfigRecorderRole"]
            }
        }
    }]
}